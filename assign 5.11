{
 "cells": [
  {
   "cell_type": "raw",
   "id": "cee28855-4561-4e12-9c59-dee7bd7756b6",
   "metadata": {},
   "source": [
    "Q5-what are custom exception in python? why do we need custom exception? explain with an example."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "0c069ac2-2a41-40d2-9658-d7ddfde54262",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Enter a number: 12\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "this run irrespective of anything\n"
     ]
    },
    {
     "ename": "NameError",
     "evalue": "name 'customError' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "Cell \u001b[0;32mIn[10], line 7\u001b[0m\n\u001b[1;32m      5\u001b[0m num \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mint\u001b[39m(\u001b[38;5;28minput\u001b[39m(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mEnter a number:\u001b[39m\u001b[38;5;124m\"\u001b[39m))\n\u001b[1;32m      6\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m num \u001b[38;5;241m>\u001b[39m \u001b[38;5;241m0\u001b[39m :\n\u001b[0;32m----> 7\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[43mcustomError\u001b[49m(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mnegative digit are not allowed\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n\u001b[1;32m      8\u001b[0m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[1;32m      9\u001b[0m     \u001b[38;5;28mprint\u001b[39m(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mYou entered:\u001b[39m\u001b[38;5;124m\"\u001b[39m, num)\n",
      "\u001b[0;31mNameError\u001b[0m: name 'customError' is not defined"
     ]
    }
   ],
   "source": [
    "class CustomError(Exception):\n",
    "    def __init__(self, age):\n",
    "        self.age = age\n",
    "try:\n",
    "    num = int(input(\"Enter a number:\"))\n",
    "    if num > 0 :\n",
    "        raise customError(\"negative digit are not allowed\")\n",
    "    else:\n",
    "        print(\"You entered:\", num)\n",
    "        \n",
    "except CustomError as ce:\n",
    "        print(\"coughtcustomerror:,ce.age\")\n",
    "        \n",
    "except ValueError:\n",
    "        print(\" Invalid Input:enter a valid number\")\n",
    "finally:\n",
    "        print(\"this run irrespective of anything\")\n",
    "        \n",
    "        \n",
    "        \n",
    "    \n",
    "    \n",
    "    "
   ]
  },
  {
   "cell_type": "raw",
   "id": "9ab7e57c-30fc-4d91-bb0b-cd152ec59107",
   "metadata": {},
   "source": [
    "Q6-"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "57e4df3d-2e44-4896-9ad9-1aa0ff7779e6",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Enter a number:  22\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Caught customError: Negative digits are not allowed.\n",
      "This will run irrespective of anything.\n"
     ]
    }
   ],
   "source": [
    "class customError(Exception):\n",
    "    def __init__(self, age):\n",
    "        self.age = age\n",
    "\n",
    "try:\n",
    "    num = int(input(\"Enter a number: \"))\n",
    "    if num > 0:\n",
    "        raise customError(\"Negative digits are not allowed.\")\n",
    "    else:\n",
    "        print(\"You entered:\", num)\n",
    "\n",
    "except customError as ce:\n",
    "    print(\"Caught customError:\", ce.age)\n",
    "\n",
    "except ValueError:\n",
    "    print(\"Invalid input. Please enter a valid number.\")\n",
    "\n",
    "finally:\n",
    "    print(\"This will run irrespective of anything.\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "df9d0704-f990-4789-94b8-8cba0f0b434e",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
